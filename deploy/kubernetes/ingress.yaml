apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sasewaddle-manager
  namespace: sasewaddle
  labels:
    app.kubernetes.io/name: sasewaddle
    app.kubernetes.io/component: ingress
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    
    # CORS if needed
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/cors-allow-origin: "https://your-domain.com"
    
    # Certificate management (if using cert-manager)
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx  # Use appropriate ingress class
  tls:
  - hosts:
    - manager.sasewaddle.example.com
    secretName: sasewaddle-tls
  rules:
  - host: manager.sasewaddle.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: manager
            port:
              number: 8000
---
# Optional: Ingress for headend proxy (if exposing HTTP proxy)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sasewaddle-headend
  namespace: sasewaddle
  labels:
    app.kubernetes.io/name: sasewaddle
    app.kubernetes.io/component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - headend.sasewaddle.example.com
    secretName: sasewaddle-headend-tls
  rules:
  - host: headend.sasewaddle.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: headend-internal
            port:
              number: 8080