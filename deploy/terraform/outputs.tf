# SASEWaddle Terraform Outputs

# VPC Outputs
output "vpc_id" {
  description = "ID of the VPC"
  value       = module.vpc.vpc_id
}

output "vpc_cidr_block" {
  description = "CIDR block of the VPC"
  value       = module.vpc.vpc_cidr_block
}

output "private_subnet_ids" {
  description = "IDs of the private subnets"
  value       = module.vpc.private_subnet_ids
}

output "public_subnet_ids" {
  description = "IDs of the public subnets"
  value       = module.vpc.public_subnet_ids
}

# EKS Outputs
output "cluster_id" {
  description = "EKS cluster ID"
  value       = module.eks.cluster_id
}

output "cluster_arn" {
  description = "EKS cluster ARN"
  value       = module.eks.cluster_arn
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane"
  value       = module.eks.cluster_endpoint
}

output "cluster_security_group_id" {
  description = "Security group ID attached to the EKS cluster"
  value       = module.eks.cluster_security_group_id
}

output "cluster_certificate_authority_data" {
  description = "Base64 encoded certificate data required to communicate with the cluster"
  value       = module.eks.cluster_certificate_authority_data
}

output "cluster_token" {
  description = "Token to use to authenticate with the cluster"
  value       = module.eks.cluster_token
  sensitive   = true
}

output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value       = module.eks.kubectl_config
  sensitive   = true
}

# RDS Outputs
output "rds_endpoint" {
  description = "RDS instance endpoint"
  value       = var.enable_rds ? module.rds[0].endpoint : null
}

output "rds_port" {
  description = "RDS instance port"
  value       = var.enable_rds ? module.rds[0].port : null
}

output "rds_database_name" {
  description = "RDS database name"
  value       = var.enable_rds ? module.rds[0].database_name : null
}

# Redis Outputs
output "redis_primary_endpoint" {
  description = "Redis primary endpoint"
  value       = module.redis.primary_endpoint
}

output "redis_port" {
  description = "Redis port"
  value       = module.redis.port
}

output "redis_auth_token" {
  description = "Redis AUTH token"
  value       = var.redis_auth_token
  sensitive   = true
}

# Load Balancer Outputs
output "manager_alb_dns_name" {
  description = "DNS name of the Manager ALB"
  value       = module.alb.dns_name
}

output "manager_alb_zone_id" {
  description = "Zone ID of the Manager ALB"
  value       = module.alb.zone_id
}

output "headend_nlb_dns_name" {
  description = "DNS name of the Headend NLB"
  value       = aws_lb.headend_nlb.dns_name
}

output "headend_nlb_zone_id" {
  description = "Zone ID of the Headend NLB"
  value       = aws_lb.headend_nlb.zone_id
}

# DNS Outputs
output "manager_domain" {
  description = "Manager service domain"
  value       = var.domain_name != "" ? "manager.${var.domain_name}" : null
}

output "headend_domain" {
  description = "Headend service domain"
  value       = var.domain_name != "" ? "headend.${var.domain_name}" : null
}

# Secrets Manager Outputs
output "secrets_manager_arn" {
  description = "ARN of the Secrets Manager secret"
  value       = aws_secretsmanager_secret.sasewaddle_secrets.arn
}

output "secrets_manager_name" {
  description = "Name of the Secrets Manager secret"
  value       = aws_secretsmanager_secret.sasewaddle_secrets.name
}

# IAM Outputs
output "worker_node_instance_profile_arn" {
  description = "ARN of the worker node instance profile"
  value       = module.iam.worker_node_instance_profile_arn
}

output "cluster_service_account_role_arn" {
  description = "ARN of the cluster service account role"
  value       = module.iam.cluster_service_account_role_arn
}

# Connection Information
output "connection_info" {
  description = "Connection information for SASEWaddle services"
  value = {
    manager_url = var.domain_name != "" ? "https://manager.${var.domain_name}" : "https://${module.alb.dns_name}"
    headend_url = var.domain_name != "" ? "headend.${var.domain_name}" : aws_lb.headend_nlb.dns_name
    wireguard_port = 51820
    cluster_name = var.cluster_name
    environment = var.environment
  }
}

# Configuration for kubectl
output "kubectl_commands" {
  description = "Commands to configure kubectl"
  value = [
    "aws eks update-kubeconfig --region ${var.region} --name ${module.eks.cluster_name}",
    "kubectl get nodes",
    "kubectl get pods -n sasewaddle"
  ]
}

# Helm commands for deployment
output "helm_commands" {
  description = "Commands to deploy SASEWaddle using Helm"
  value = [
    "helm repo add sasewaddle https://charts.sasewaddle.com",
    "helm repo update",
    "helm install sasewaddle sasewaddle/sasewaddle -n sasewaddle --create-namespace --set manager.image=${var.manager_image} --set headend.image=${var.headend_image}"
  ]
}

# Monitoring URLs
output "monitoring_urls" {
  description = "URLs for monitoring services"
  value = var.enable_monitoring ? {
    prometheus = var.domain_name != "" ? "https://prometheus.${var.domain_name}" : null
    grafana    = var.domain_name != "" ? "https://grafana.${var.domain_name}" : null
  } : null
}

# Resource Summary
output "resource_summary" {
  description = "Summary of created resources"
  value = {
    vpc_id           = module.vpc.vpc_id
    cluster_name     = module.eks.cluster_name
    node_groups      = keys(var.node_groups)
    rds_enabled      = var.enable_rds
    redis_enabled    = true
    monitoring       = var.enable_monitoring
    multi_az         = var.multi_az
    backup_enabled   = var.enable_backups
    domain_configured = var.domain_name != ""
  }
}

# Cost Estimation Tags
output "cost_allocation_tags" {
  description = "Tags for cost allocation and tracking"
  value = {
    Project     = "SASEWaddle"
    Environment = var.environment
    Owner       = "Platform-Team"
    CostCenter  = "Infrastructure"
    Application = "SASE"
  }
}