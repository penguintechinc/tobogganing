# Docker build for SASEWaddle GUI client (AMD64)
# Optimized for native AMD64 builds with all GUI dependencies

FROM golang:1.23-bullseye AS gui-builder-amd64

# Install GUI development dependencies for AMD64
RUN apt-get update && apt-get install -y \
    gcc \
    libc6-dev \
    libx11-dev \
    libxcursor-dev \
    libxrandr-dev \
    libxinerama-dev \
    libxi-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libglfw3-dev \
    pkg-config \
    git \
    libayatana-appindicator3-dev \
    libgtk-3-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /src

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build GUI client for AMD64
ARG VERSION=dev
ARG BUILD_TIME
ARG GIT_COMMIT
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-X main.version=${VERSION} -X main.buildTime=${BUILD_TIME} -X main.gitCommit=${GIT_COMMIT} -w -s" \
    -o sasewaddle-client-gui \
    ./cmd/gui

# Test stage - verify the binary was built
FROM ubuntu:20.04 AS test
RUN apt-get update && apt-get install -y file && rm -rf /var/lib/apt/lists/*
COPY --from=gui-builder-amd64 /src/sasewaddle-client-gui /tmp/
RUN file /tmp/sasewaddle-client-gui && \
    ls -la /tmp/sasewaddle-client-gui

# Final stage - minimal runtime image
FROM ubuntu:20.04
RUN apt-get update && apt-get install -y \
    libayatana-appindicator3-1 \
    libgtk-3-0 \
    libgl1-mesa-glx \
    && rm -rf /var/lib/apt/lists/*
COPY --from=gui-builder-amd64 /src/sasewaddle-client-gui /usr/local/bin/sasewaddle-client-gui
ENTRYPOINT ["/usr/local/bin/sasewaddle-client-gui"]